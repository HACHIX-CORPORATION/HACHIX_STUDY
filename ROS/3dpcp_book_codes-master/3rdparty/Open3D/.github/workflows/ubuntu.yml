name: Ubuntu

on:
  workflow_dispatch:
    inputs:
      developer_build:
        description: 'Set to OFF for Release wheels'
        required: false
        default: 'ON'

  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]  # Rebuild on new pushes to PR

env:
  NPROC: 2

jobs:
  ubuntu:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        CONFIG: [ON, OFF]
    env:
      SHARED: ${{ matrix.CONFIG }}
      BUILD_CUDA_MODULE: OFF
      BUILD_TENSORFLOW_OPS: ${{ matrix.CONFIG }}
      BUILD_PYTORCH_OPS: ${{ matrix.CONFIG }}
    steps:
      - name: Cancel outdated
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Maximize build space
        run: |
          source util/ci_utils.sh
          maximize_ubuntu_github_actions_build_space

      - name: Setup cache
        uses: actions/cache@v2
        with:
          # Ref: https://github.com/apache/incubator-mxnet/pull/18459/files
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists.
          # Common prefix will be used so that ccache can be used across commits.
          restore-keys: |
            ${{ runner.os }}-ccache

      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      # Pre-installed 18.04 packages: https://git.io/JfHmW
      - name: Install dependencies
        run: |
          ./util/install_deps_ubuntu.sh assume-yes
          wget https://github.com/isl-org/open3d_downloads/releases/download/ccache/ccache
          chmod +x ccache
          sudo mv ccache /usr/local/bin
          ccache -M 2G  # See .github/workflows/readme.md for ccache strategy.

      - name: Config and build
        run: |
          PATH=/usr/lib/ccache:$PATH
          ccache -s
          ./util/run_ci.sh
          ccache -s
